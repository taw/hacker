#!/usr/bin/env ruby

require "pp"

def enc(txt, x, k)
  txt.map{|t|
    c = t^k
    k = (c+x) % 0x100
    c
  }
end

def dec(txt, x, k)
  txt.map{|t|
    c = t^k
    k = (t+x) % 0x100
    c
  }
end

# pp enc([1,2,5,19], 7, 82)
# pp dec([83, 88, 90, 114], 7, 82)

data = "310a7718781f734c31425e775a314f3b40132c5122720599b2dfb790fd8ff894add2a4bdc5d1a6e987a0ed8eee94adcfbb94ee88f382127819623a404d3f"
data = data.scan(/../).map{|x| x.to_i(16)}

(0..255).each do |x|
  (0..255).each do |k|
    xxx = dec(data, x, k).map(&:chr).join
    next if xxx =~ /[^ -\177]/
    p [x, k, xxx]
  end
end
